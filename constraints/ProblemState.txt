context ProblemState inv:
self.contextProblem->notEmpty()

context ProblemState::accept()
pre: self.currentState.oclIsTypeOf(Open) or self.currentState.oclIsTypeOf(declined)
post: self.currentState.oclIsTypeOf(Accepted)

context ProblemState::decline()
pre: self.currentState.oclIsTypeOf(Open) or self.currentState.oclIsTypeOf(Accepted)
post: self.currentState.oclIsTypeOf(Declined)

context ProblemState::close()
pre: self.currentState.oclIsTypeOf(Declined) or self.currentState.oclIsTypeOf(InProgress)
post: self.currentState.oclIsTypeOf(Closed)

context ProblemState::approach()
pre: self.currentState.oclIsTypeOf(Accepted)
post: self.currentState.oclIsTypeOf(InProgress)

context ProblemState::abort()
pre: self.currentState.oclIsTypeOf(InProgress)
post: self.currentState.oclIsTypeOf(Accepted)

context ProblemState:getDescription()
body: self.description